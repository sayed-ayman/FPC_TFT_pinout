#include <SPI.h>  // ุชุถููู ููุชุจุฉ SPI ูุงุณุชุฎุฏุงู ุจุฑูุชูููู ุงูุงุชุตุงู

// ุชุนุฑูู ุงูููุงูุฐ ุงูููููุฉ ูุงุณุชุฎุฏุงููุง ูุน ุงูุดุงุดุฉ
const int pins[] = {PA1, PA2, PA3, PA4, PA5, PA7};  
const char* pinNames[] = {"PA1", "PA2", "PA3", "PA4", "PA5", "PA7"};

// ุฅุนุฏุงุฏ ุณุฑุนุฉ SPI ุฅูู 27 ููุฌุงูุฑุชุฒ
SPISettings spiSettings(27000000, MSBFIRST, SPI_MODE0);

// ูุงุฆูุฉ ูุชุญููุงุช ุงูุดุงุดุงุช ูุน ุฅููุงููุฉ ุชูุนูู ุฃู ุชุนุทูู ูู ูููุง
const char* controllers[] = {
    "ILI9341",   // ุฏูุฉ 240ร320ุ ุดุงุฆุน ุฌุฏูุงุ ูุฏุนู SPI ู 8080
    "ST7735",    // ุฏูุฉ 128ร160ุ ููุงุณุจ ููุดุงุดุงุช ุงูุตุบูุฑุฉ
    "ILI9163",   // ูุดุงุจู ูู ST7735 ููู ูุน ุฏุนู ุฃููุงู ุฃูุถู
    "S6D02A1",   // ูุณุชุฎุฏู ูู ุจุนุถ ุดุงุดุงุช 128ร160ุ ุบูุฑ ุดุงุฆุน
    "HX8357D",   // ุฏูุฉ 320ร480ุ ูุฏุนู SPI ู 8080ุ ููุงุณุจ ูุดุงุดุงุช 3.5 ุจูุตุฉ
    "ILI9481",   // ุฏูุฉ 320ร480ุ ูุฏุนู 16/18 ุจุช ููู
    "ILI9486",   // ุฏูุฉ 320ร480ุ ูุนูู ุนุจุฑ SPI ูููู ุฃุจุทุฃ ุจุณุจุจ 18-bit ููู
    "ILI9488",   // ุฏูุฉ 320ร480ุ ูุดุจู ILI9486 ูููู ูุน ุชุญุณููุงุช ุทูููุฉ
    "ST7789",    // ุฏูุฉ 240ร240ุ ุดุงุฆุน ูู ุงูุดุงุดุงุช ุงูุฏุงุฆุฑูุฉ ูุงููุฑุจุนุฉ
    "R61581",    // ุฏูุฉ 320ร480ุ ูุณุชุฎุฏู ูู ุจุนุถ ุงูุดุงุดุงุช ุงูุฃูุจุฑ
    "RM68140",   // ูุดุงุจู ูู R61581 ูููู ุฃูู ุงูุชุดุงุฑูุง
    "ST7796",    // ุฏูุฉ 320ร480ุ ูุฏุนู SPI ู RGB
    "SSD1351",   // ุดุงุดุฉ OLEDุ ุฏูุฉ 128ร128ุ ุชุฏุนู SPI
    "SSD1963",   // ุฏูุฉ 800ร480ุ ุชุณุชุฎุฏู ูู ุงูุดุงุดุงุช ุงููุจูุฑุฉ (5 ุจูุตุฉ ุฃู ุฃูุซุฑ)
    "ILI9225",   // ุฏูุฉ 176ร220ุ ูุงุฏุฑ ุงูุงุณุชุฎุฏุงู
    "GC9A01",    // ุฏูุฉ 240ร240ุ ูุดููุฑ ูู ุงูุดุงุดุงุช ุงูุฏุงุฆุฑูุฉ
    "GC9106",    // ูุงุฏุฑ ุงูุงุณุชุฎุฏุงู
    "GC9107",    // ูุดุงุจู ูู GC9106 ูููู ูุน ุงุฎุชูุงูุงุช ุทูููุฉ
    "HX8347C",   // ุฏูุฉ 240ร320ุ ูุฏุนู 8/16-bit 8080
    "HX8347D",   // ูุดุงุจู ูู HX8347C ูุน ุชุญุณููุงุช
    "HX8352C",   // ุฏูุฉ 240ร400ุ ูููู ุงูุงุณุชุฎุฏุงู
    "HX8357A",   // ุฏูุฉ 320ร480ุ ูุดุงุจู ูู HX8357D
    "HX8357B",   // ูุณุฎุฉ ูุฎุชููุฉ ูู HX8357A
    "HX8369A",   // ุฏูุฉ 480ร800ุ ูุณุชุฎุฏู ูู ุจุนุถ ุงูููุงุชู ุงููุฏููุฉ
    "ILI9342",   // ูุณุฎุฉ ูุญุณูุฉ ูู ILI9341
    "JBT6K71",   // ูุงุฏุฑ ุฌุฏูุง
    "NT35310",   // ุฏูุฉ 720ร1280ุ ุบูุฑ ุดุงุฆุน ูู ุงููุดุงุฑูุน ุงูุตุบูุฑุฉ
    "NT35510",   // ุฏูุฉ 480ร800ุ ูุณุชุฎุฏู ูู ุจุนุถ ุงูุดุงุดุงุช ุงููุจูุฑุฉ
    "NT39125",   // ูุงุฏุฑ ุฌุฏูุง
    "NV3041A",   // ุบูุฑ ูุนุฑูู ุฌูุฏูุง
    "R61529",    // ุฏูุฉ 320ร480ุ ูุดุงุจู ูู R61581
    "SEPS525",   // ุดุงุดุฉ OLEDุ ุฏูุฉ 160ร128
    "SSD1283A",  // ุดุงุดุฉ OLED ุตุบูุฑุฉ
    "SSD1331",   // ุดุงุดุฉ OLEDุ ุฏูุฉ 96ร64ุ ุชุฏุนู SPI
    "SSD1351"    // ุดุงุดุฉ OLEDุ ุฏูุฉ 128ร128ุ ุฃููุงู ุฌูููุฉ ุฌุฏูุง
};

// ูุตูููุฉ ูุชุญุฏูุฏ ุงููุชุญููุงุช ุงูุชู ุณูุชู ุชุฌุฑุจุชูุง
bool enabledControllers[sizeof(controllers) / sizeof(controllers[0])];

// ูุชุบูุฑุงุช ูุญูุธ ุงูููุงูุฐ ุงููุณุชุฎุฏูุฉ
int MOSI_PIN, SCK_PIN, DC_PIN, RESET_PIN, TE_PIN;
volatile bool TE_Flag = false;  // ูุชุบูุฑ ูุญูุธ ุญุงูุฉ TE Signal

// ุฏุงูุฉ ุงูููุงุทุนุฉ ูุชุญุฏูุซ TE_Flag ุนูุฏ ุงุณุชูุจุงู TE Signal
void TE_ISR() {
    TE_Flag = true;
}

// ุฏุงูุฉ ูุฅุฑุณุงู ุงูุฃูุงูุฑ ุฅูู ุงูุดุงุดุฉ
void LCD_SendCommand(uint8_t cmd) {
    SPI.beginTransaction(spiSettings);
    digitalWrite(DC_PIN, LOW); // ูุถุน DC ูู ูุถุน ุงูุฃูุงูุฑ
    SPI.transfer(cmd);
    SPI.endTransaction();
}

// ุฏุงูุฉ ูุฅุฑุณุงู ุงูุจูุงูุงุช ุฅูู ุงูุดุงุดุฉ
void LCD_SendData(uint8_t data) {
    SPI.beginTransaction(spiSettings);
    digitalWrite(DC_PIN, HIGH); // ูุถุน DC ูู ูุถุน ุงูุจูุงูุงุช
    SPI.transfer(data);
    SPI.endTransaction();
}

// ุฏุงูุฉ ุฅุนุงุฏุฉ ุชุดุบูู ุงูุดุงุดุฉ
void LCD_Reset() {
    digitalWrite(RESET_PIN, LOW);
    delay(100);
    digitalWrite(RESET_PIN, HIGH);
    delay(100);
}

// ุฏุงูุฉ ูุชููุฆุฉ ุงูุดุงุดุฉ ูุชูุนูู TE Signal
void LCD_Init(const char* controller) {
    LCD_Reset();
    LCD_SendCommand(0x35);  // ุชูุนูู TE Signal
    LCD_SendData(0x00);
}

// ุฏุงูุฉ ูุงูุชุธุงุฑ TE Signal ุญุชู ูุชู ุชุญุฏูุซ ุงูุดุงุดุฉ ุจุดูู ูุชุฒุงูู
bool Wait_For_TE_Signal() {
    TE_Flag = false;
    unsigned long timeout = millis() + 2000;
    while (millis() < timeout) {
        if (TE_Flag) return true;
    }
    return false;
}

// ุฏุงูุฉ ูููุก ุงูุดุงุดุฉ ุจุงูููู ุงูุฃุญูุฑ
void Fill_Screen_Red() {
    LCD_SendCommand(0x2C);
    for (int i = 0; i < (320 * 480); i++) {
        SPI.transfer(0xF8);
        SPI.transfer(0x00);
    }
}

// ุฏุงูุฉ ูุงุฎุชูุงุฑ ุงููุชุญููุงุช ุนุจุฑ Serial Monitor
void SelectControllers() {
    Serial.println("๐น ูุงุฆูุฉ ุงููุชุญููุงุช ุงููุชุงุญุฉ:");
    for (int i = 0; i < sizeof(controllers) / sizeof(controllers[0]); i++) {
        Serial.print(i);
        Serial.print(": ");
        Serial.println(controllers[i]);
        enabledControllers[i] = false; // ุชุนุทูู ุฌููุน ุงููุชุญููุงุช ูู ุงูุจุฏุงูุฉ
    }

    Serial.println("\nโ๏ธ ุฃุฏุฎู ุฃุฑูุงู ุงููุชุญููุงุช ุงููุฑุงุฏ ุชุฌุฑุจุชูุง (ูุซุงู: 0 2 4):");
    while (!Serial.available());  // ุงูุชุธุงุฑ ุงูุฅุฏุฎุงู ูู Serial Monitor

    String input = Serial.readStringUntil('\n'); // ูุฑุงุกุฉ ุงูุฅุฏุฎุงู
    input.trim();  // ุฅุฒุงูุฉ ุฃู ูุณุงูุงุช ุฒุงุฆุฏุฉ

    char* token = strtok((char*)input.c_str(), " ");  // ุชูุณูู ุงููุต
    while (token != NULL) {
        int index = atoi(token);  // ุชุญููู ุงููุต ุฅูู ุฑูู
        if (index >= 0 && index < sizeof(controllers) / sizeof(controllers[0])) {
            enabledControllers[index] = true;  // ุชูุนูู ุงููุชุญูู ุงููุญุฏุฏ
        }
        token = strtok(NULL, " ");
    }

    Serial.println("\nโ ุงููุชุญููุงุช ุงูููุนูุฉ:");
    for (int i = 0; i < sizeof(controllers) / sizeof(controllers[0]); i++) {
        if (enabledControllers[i]) {
            Serial.println(controllers[i]);
        }
    }
}

// ุฏุงูุฉ ูุชุฌุฑุจุฉ ุฌููุน ุงูุชูุตููุงุช ุงูููููุฉ ูููุชุญููุงุช ุงููุญุฏุฏุฉ
void Find_Correct_Pins() {
    for (int c = 0; c < sizeof(controllers) / sizeof(controllers[0]); c++) {
        if (!enabledControllers[c]) continue;  // ุชุฌุงูู ุงููุชุญููุงุช ุบูุฑ ุงูููุนูุฉ

        Serial.print("๐ฅ๏ธ ุชุฌุฑุจุฉ ูุนุงูุฌ ุงูุดุงุดุฉ: ");
        Serial.println(controllers[c]);

        for (int m = 0; m < 6; m++) {
            for (int s = 0; s < 6; s++) {
                if (s == m) continue;
                for (int d = 0; d < 6; d++) {
                    if (d == m || d == s) continue;
                    for (int r = 0; r < 6; r++) {
                        if (r == m || r == s || r == d) continue;
                        for (int t = 0; t < 6; t++) {
                            if (t == m || t == s || t == d || t == r) continue;

                            // ุชุญุฏูุฏ ุงูููุงูุฐ ุงูุญุงููุฉ
                            MOSI_PIN = pins[m];
                            SCK_PIN = pins[s];
                            DC_PIN = pins[d];
                            RESET_PIN = pins[r];
                            TE_PIN = pins[t];

                            // ุทุจุงุนุฉ ุชูุงุตูู ุงูุชุฌุฑุจุฉ ุงูุญุงููุฉ
                            Serial.print("MOSI=");
                            Serial.print(pinNames[m]);
                            Serial.print(", SCK=");
                            Serial.print(pinNames[s]);
                            Serial.print(", DC=");
                            Serial.print(pinNames[d]);
                            Serial.print(", RESET=");
                            Serial.print(pinNames[r]);
                            Serial.print(", TE=");
                            Serial.println(pinNames[t]);

                            // ุชููุฆุฉ ุงูููุงูุฐ
                            SPI.begin();
                            pinMode(MOSI_PIN, OUTPUT);
                            pinMode(SCK_PIN, OUTPUT);
                            pinMode(DC_PIN, OUTPUT);
                            pinMode(RESET_PIN, OUTPUT);
                            pinMode(TE_PIN, INPUT);

                            attachInterrupt(digitalPinToInterrupt(TE_PIN), TE_ISR, RISING);

                            // ุชููุฆุฉ ุงูุดุงุดุฉ ูุชุฌุฑุจุฉ ุงูุชูุตูู
                            LCD_Init(controllers[c]);
                            if (Wait_For_TE_Signal()) {
                                Serial.println("โ ุชู ุงูุนุซูุฑ ุนูู ุงูุชูุตูู ุงูุตุญูุญ!");
                                Fill_Screen_Red();
                            }

                            detachInterrupt(digitalPinToInterrupt(TE_PIN));
                        }
                    }
                }
            }
        }
    }
}

// ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ ููุชุดุบูู
void setup() {
    Serial.begin(115200);
    delay(2000);
    SelectControllers();  // ุงูุณูุงุญ ูููุณุชุฎุฏู ุจุชุญุฏูุฏ ุงููุชุญููุงุช
    Find_Correct_Pins();  // ุจุฏุก ุชุฌุฑุจุฉ ุงูุชูุตููุงุช
}

// ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ ููุชูุฑุงุฑ (ุบูุฑ ูุณุชุฎุฏูุฉ ุญุงูููุง)
void loop() {
    delay(1000);
}
